/** Switchv.ys */
.pos 0
    irmovq stack, %rsp
    call main
    halt

/** 数组，用于查看返回结果 */
array:
    .quad 0x0000000000000000
    .quad 0x0000000000000000
    .quad 0x0000000000000000
    .quad 0x0000000000000000

main:
    # 使用数字 -1,1,3,5测试
    irmovq array,%rcx

    irmovq $-1,%rdi
    call   switchv
    rmmovq %rax,(%rcx)

    irmovq $1,%rdi
    call   switchv
    rmmovq %rax,8(%rcx)

    irmovq $3,%rdi
    call   switchv
    rmmovq %rax,16(%rcx)

    irmovq $5,%rdi
    call   switchv
    rmmovq %rax,24(%rcx)

    ret

table:
    .quad LD
    .quad L0
    .quad L1
    .quad L2
    .quad L3
    .quad L4
    .quad L5

/** %rdi作为参数 */
switchv:
    /** Default */
    irmovq table,%r8
    irmovq $8,%r9
    irmovq $1,%r10

    /** if rdi > 5 */
    irmovq $5,%rax
    rrmovq %rax,%r11
    subq   %rdi,%r11
    jl     addr

    /** if rdi < 0 */
    irmovq $0,%rax
    rrmovq %rax,%r11
    subq   %rdi,%r11
    jg     addr

loop:
    addq   %r9,%r8
    rrmovq %rax,%r11
    subq   %rdi,%r11
    je     addr
    addq   %r10,%rax
    jmp    loop

addr:
    mrmovq (%r8),%r8
    pushq  %r8
    ret

L0:
    irmovq $0xaaa,%rax
    ret
L1:
    jmp LD
L2:
    jmp L5
L3:
    irmovq $0xccc,%rax
    ret
L4:
    jmp LD
L5:
    irmovq $0xbbb,%rax
    ret
LD:
    irmovq $0xddd,%rax
    ret

.pos 0x200
stack:
